// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Web_API.Services;

#nullable disable

namespace Web_API.Migrations
{
    [DbContext(typeof(DBcontext))]
    [Migration("20240703065922_Times")]
    partial class Times
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("Web_API.models.weatherapi.AstronomyItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("sunriseTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("sunsetTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AstronomyItems");
                });

            modelBuilder.Entity("Web_API.models.weatherapi.WeatherItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AstronomyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CityName")
                        .HasColumnType("TEXT");

                    b.Property<string>("CountryName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("forecast")
                        .HasColumnType("TEXT");

                    b.Property<string>("forecastIcon")
                        .HasColumnType("TEXT");

                    b.Property<string>("temp")
                        .HasColumnType("TEXT");

                    b.Property<string>("time")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AstronomyId");

                    b.ToTable("WeatherItems");
                });

            modelBuilder.Entity("Web_API.models.weatherapi.WeatherItem", b =>
                {
                    b.HasOne("Web_API.models.weatherapi.AstronomyItem", "Astronomy")
                        .WithMany()
                        .HasForeignKey("AstronomyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Astronomy");
                });
#pragma warning restore 612, 618
        }
    }
}
